name: Build and Push Docker Images

on:
  push:
    branches: [ main ]
    paths:
      - 'docker/**'
      - 'ansible/**'
      - 'setup-dev-env.sh'
      - '*.env'
      - 'ansible-galaxy-requirements.yaml'
  pull_request:
    branches: [ main ]
    paths:
      - 'docker/**'
      - 'ansible/**'
      - 'setup-dev-env.sh'
      - '*.env'
      - 'ansible-galaxy-requirements.yaml'
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-images:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set up QEMU for multi-platform builds
        uses: docker/setup-qemu-action@v3

      - name: Install vcstool
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-pip
          pip install vcstool

      - name: Set up SSH for private repositories
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.DEPLOY_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan github.com >> ~/.ssh/known_hosts

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push multi-platform images
        run: |
          # Start SSH agent for Docker builds
          eval $(ssh-agent -s)
          ssh-add ~/.ssh/id_rsa
          
          cd docker
          chmod +x build.sh
          
          # Build and push base images with proper tagging
          ./build.sh --target base --platform linux/amd64 --version latest
          docker tag ghcr.io/serene4mr/mowbot:base ghcr.io/serene4mr/mowbot:base-amd64
          docker push ghcr.io/serene4mr/mowbot:base-amd64
          
          ./build.sh --target base --platform linux/arm64 --version latest
          docker tag ghcr.io/serene4mr/mowbot:base ghcr.io/serene4mr/mowbot:base-arm64
          docker push ghcr.io/serene4mr/mowbot:base-arm64
          
          # Create and push multi-arch manifest for base
          docker manifest create ghcr.io/serene4mr/mowbot:base \
            ghcr.io/serene4mr/mowbot:base-amd64 \
            ghcr.io/serene4mr/mowbot:base-arm64
          docker manifest push ghcr.io/serene4mr/mowbot:base
          
          # Build and push main-dev images
          ./build.sh --target main-dev --platform linux/amd64 --version latest
          docker tag ghcr.io/serene4mr/mowbot:main-dev ghcr.io/serene4mr/mowbot:main-dev-amd64
          docker push ghcr.io/serene4mr/mowbot:main-dev-amd64
          
          ./build.sh --target main-dev --platform linux/arm64 --version latest
          docker tag ghcr.io/serene4mr/mowbot:main-dev ghcr.io/serene4mr/mowbot:main-dev-arm64
          docker push ghcr.io/serene4mr/mowbot:main-dev-arm64
          
          # Create and push multi-arch manifest for main-dev
          docker manifest create ghcr.io/serene4mr/mowbot:main-dev \
            ghcr.io/serene4mr/mowbot:main-dev-amd64 \
            ghcr.io/serene4mr/mowbot:main-dev-arm64
          docker manifest push ghcr.io/serene4mr/mowbot:main-dev
          
          # Build and push CUDA images (AMD64 only)
          ./build.sh --target main-dev-cuda --platform linux/amd64 --version latest
          docker push ghcr.io/serene4mr/mowbot:main-dev-cuda
