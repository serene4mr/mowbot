ARG BASE_IMAGE

# hadolint ignore=DL3006
FROM $BASE_IMAGE AS base
SHELL ["/bin/bash", "-o", "pipefail", "-c"]
ARG ROS_DISTRO
ENV CCACHE_DIR="/root/.ccache"

# Copy files
COPY setup-dev-env.sh ansible-galaxy-requirements.yaml amd64.env arm64.env py_requirements.txt /mowbot/
RUN chmod +x /mowbot/setup-dev-env.sh
COPY ansible/ /mowbot/ansible/
COPY docker/scripts/cleanup_apt.sh /mowbot/cleanup_apt.sh
RUN chmod +x /mowbot/cleanup_apt.sh
COPY docker/scripts/cleanup_system.sh /mowbot/cleanup_system.sh
RUN chmod +x /mowbot/cleanup_system.sh
COPY docker/scripts/resolve_rosdep_keys.sh /mowbot/resolve_rosdep_keys.sh
RUN chmod +x /mowbot/resolve_rosdep_keys.sh
COPY docker/scripts/build_and_clean.sh /mowbot/build_and_clean.sh
RUN chmod +x /mowbot/build_and_clean.sh
WORKDIR /mowbot

# Install apt packages and add GitHub to known hosts for private repositories
RUN rm -f /etc/apt/apt.conf.d/docker-clean \
  && echo 'Binary::apt::APT::Keep-Downloaded-Packages "true";' >/etc/apt/apt.conf.d/keep-cache
RUN --mount=type=cache,target=/var/cache/apt,sharing=locked \
  apt-get update && DEBIAN_FRONTEND=noninteractive apt-get -y install --no-install-recommends \
  gosu \
  ssh \
  apt-utils \
  libqt5serialport5-dev \
  && /mowbot/cleanup_apt.sh \
  && mkdir -p ~/.ssh \
  && ssh-keyscan github.com >> ~/.ssh/known_hosts

# Set up base environment
RUN --mount=type=ssh \
  --mount=type=cache,target=/var/cache/apt,sharing=locked \
  ./setup-dev-env.sh -y --module base --no-nvidia --no-cuda-drivers --runtime \
  && pip uninstall -y ansible ansible-core \
  && /mowbot/cleanup_apt.sh \
  && echo "source /opt/ros/${ROS_DISTRO}/setup.bash" > /etc/bash.bashrc

##########################################################################
# Generate install package lists
# Copy source and Generate install package lists
COPY src /mowbot/src
RUN /mowbot/resolve_rosdep_keys.sh /mowbot/src ${ROS_DISTRO} \
  > /tmp/rosdep-main-depend-packages.txt \
  && cat /tmp/rosdep-main-depend-packages.txt

# Install rosdep dependencies
# hadolint ignore=SC2002
RUN --mount=type=cache,target=/var/cache/apt,sharing=locked \
  apt-get update \
  && cat /tmp/rosdep-main-depend-packages.txt| xargs apt-get install -y --no-install-recommends \
  && /mowbot/cleanup_apt.sh

# Install Python packages
RUN pip install --no-cache-dir -r /mowbot/py_requirements.txt

# Build ROS2 packages with ccache
# hadolint ignore=SC1091
RUN --mount=type=cache,target=${CCACHE_DIR} \
  source /opt/ros/"$ROS_DISTRO"/setup.bash \
  && /mowbot/build_and_clean.sh ${CCACHE_DIR} /opt/ros/${ROS_DISTRO}

##########################################################################


# Create entrypoint
COPY docker/etc/ros_entrypoint.sh /ros_entrypoint.sh
RUN chmod +x /ros_entrypoint.sh
CMD ["/bin/bash"]

FROM base AS base-cuda
SHELL ["/bin/bash", "-o", "pipefail", "-c"]

# Set up CUDA runtime environment
# hadolint ignore=SC2002
RUN --mount=type=ssh \
  ./setup-dev-env.sh -y --module base --no-cuda-drivers --runtime \
  && pip uninstall -y ansible ansible-core \
  && /mowbot/cleanup_apt.sh true