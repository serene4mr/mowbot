ARG BASE_IMAGE

# hadolint ignore=DL3006
FROM $BASE_IMAGE AS base
SHELL ["/bin/bash", "-o", "pipefail", "-c"]
ARG ROS_DISTRO

# Copy files
COPY setup-dev-env.sh ansible-galaxy-requirements.yaml amd64.env arm64.env /mowbot/
RUN chmod +x /mowbot/setup-dev-env.sh
COPY ansible/ /mowbot/ansible/
COPY docker/scripts/cleanup_apt.sh /mowbot/cleanup_apt.sh
RUN chmod +x /mowbot/cleanup_apt.sh
COPY docker/scripts/cleanup_system.sh /mowbot/cleanup_system.sh
RUN chmod +x /mowbot/cleanup_system.sh
WORKDIR /mowbot

# Install apt packages and add GitHub to known hosts for private repositories
RUN rm -f /etc/apt/apt.conf.d/docker-clean \
  && echo 'Binary::apt::APT::Keep-Downloaded-Packages "true";' >/etc/apt/apt.conf.d/keep-cache
RUN --mount=type=cache,target=/var/cache/apt,sharing=locked \
  apt-get update && DEBIAN_FRONTEND=noninteractive apt-get -y install --no-install-recommends \
  gosu \
  ssh \
  && /mowbot/cleanup_apt.sh \
  && mkdir -p ~/.ssh \
  && ssh-keyscan github.com >> ~/.ssh/known_hosts

# Set up base environment
RUN --mount=type=ssh \
  --mount=type=cache,target=/var/cache/apt,sharing=locked \
  ./setup-dev-env.sh -y --module base --no-nvidia --no-cuda-drivers --runtime \
  && pip uninstall -y ansible ansible-core \
  && /mowbot/cleanup_apt.sh \
  && echo "source /opt/ros/${ROS_DISTRO}/setup.bash" > /etc/bash.bashrc

# Create entrypoint
COPY docker/etc/ros_entrypoint.sh /ros_entrypoint.sh
RUN chmod +x /ros_entrypoint.sh
CMD ["/bin/bash"]

FROM base AS base-cuda
SHELL ["/bin/bash", "-o", "pipefail", "-c"]

# Set up CUDA runtime environment
# hadolint ignore=SC2002
RUN --mount=type=ssh \
  MOWBOT_DISABLE_DOCKER_RESTART=true ./setup-dev-env.sh -y --module base --no-cuda-drivers --runtime \
  && pip uninstall -y ansible ansible-core \
  && /mowbot/cleanup_apt.sh true